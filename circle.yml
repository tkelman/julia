version: 2
workflows:
  version: 2
  linux-builds:
    jobs:
      - build-x86_64
      - build-i686

jobs:
  build-x86_64:
    docker:
#      - image: ubuntu:14.04
      - image: circleci/python:2.7
        environment:
          JULIA_CPU_CORES: 6
          ARCH: x86_64
#    resource_class: xlarge
    steps: &steps
#          apt-get update &&
      - run: | # install build dependencies
          sudo apt-get install -y g++-4.8-multilib gfortran-4.8-multilib \
            time ccache bar &&
          for prog in gcc g++ gfortran; do
            sudo ln -s /usr/bin/$prog-4.8 /usr/local/bin/$prog;
          done
#          apt-get install -y curl make patch m4 xz-utils git
      - checkout # magic circle ci code checkout step
      - run: | # set versioning info and Make.user variables
          make -C base version_git.jl.phony &&
          echo "override ARCH = $ARCH" | tee -a Make.user &&
          for var in FORCE_ASSERTIONS LLVM_ASSERTIONS USECCACHE NO_GIT; do
            echo "override $var = 1" | tee -a Make.user;
          done &&
          echo "$ARCH $HOME  $(date +%Y%W)" | tee /tmp/weeknumber
      - restore_cache: # silly to take a checksum of the tag file here instead of
          keys: # its contents but this is the only thing that works on circle
            - ccache-{{ checksum "/tmp/weeknumber" }}
      - run: | # build deps
          contrib/download_cmake.sh &&
          make -j8 -C deps || make
      - run: | # build julia, output ccache stats when done
          make -j8 all &&
          make prefix=/tmp/julia install &&
          ccache -s &&
          make build-stats
      - run: | # move source tree out of the way, run tests from install tree
          cd .. &&
          mv project julia-src &&
          /tmp/julia/bin/julia -e 'versioninfo()' &&
          /tmp/julia/bin/julia --precompiled=no -e 'true' &&
          /tmp/julia/bin/julia-debug --precompiled=no -e 'true' &&
          pushd /tmp/julia/share/julia/test &&
          /tmp/julia/bin/julia --check-bounds=yes runtests.jl all | bar -i 30 &&
          /tmp/julia/bin/julia --check-bounds=yes runtests.jl libgit2-online download pkg &&
          popd &&
          mkdir /tmp/embedding-test &&
          make check -C /tmp/julia/share/doc/julia/examples/embedding \
            JULIA=/tmp/julia/bin/julia BIN=/tmp/embedding-test \
            "$(cd julia-src && make print-CC)" &&
          mv julia-src project
#      - run: cd project && make -C doc deploy
      - save_cache:
          key: ccache-{{ checksum "/tmp/weeknumber" }}
          paths:
            - ~/.ccache

  build-i686:
    docker:
#      - image: ubuntu:14.04
      - image: circleci/python:2.7
        environment:
          JULIA_CPU_CORES: 6
          ARCH: i686
#    resource_class: xlarge
    steps: *steps
