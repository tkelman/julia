environment:
  matrix:
#  - JULIAVERSION: "julianightlies/bin/winnt/x86/0.4/julia-0.4.2-bb73f3489d-win32.exe"
#    JULIAEXE: "julia"
#  - JULIAVERSION: "julianightlies/bin/winnt/x86/0.4/julia-0.4.2-bb73f3489d-win32.exe"
#    JULIAEXE: "julia-debug"
  - JULIAVERSION: "julianightlies/bin/winnt/x64/0.4/julia-0.4.2-bb73f3489d-win64.exe"
    JULIAEXE: "julia"
  - JULIAVERSION: "julianightlies/bin/winnt/x64/0.4/julia-0.4.2-bb73f3489d-win64.exe"
    JULIAEXE: "julia-debug"

branches:
  only:
    - master
    - /release-.*/
    - tk/avtest

notifications:
  - provider: Email
    on_build_success: false
    on_build_failure: false
    on_build_status_changed: false

install:
# if there's a newer build queued for the same PR, cancel this one
  - ps: if ($env:APPVEYOR_PULL_REQUEST_NUMBER -and $env:APPVEYOR_BUILD_NUMBER -ne ((Invoke-RestMethod `
        https://ci.appveyor.com/api/projects/$env:APPVEYOR_ACCOUNT_NAME/$env:APPVEYOR_PROJECT_SLUG/history?recordsNumber=50).builds | `
        Where-Object pullRequestId -eq $env:APPVEYOR_PULL_REQUEST_NUMBER)[0].buildNumber) { `
        throw "There are newer queued builds for this pull request, failing early." }
# Download most recent Julia Windows binary
  - ps: (new-object net.webclient).DownloadFile(
        $("http://s3.amazonaws.com/"+$env:JULIAVERSION),
        "C:\projects\julia-binary.exe")
# Run installer silently, output to C:\projects\julia
  - C:\projects\julia-binary.exe /S /D=C:\projects\julia

build_script:
# Need to convert from shallow to complete for Pkg.clone to work
#  - IF EXIST .git\shallow (git fetch --unshallow)
#test_script:
#  - git config --global user.name "appveyor test"
#  - git config --global user.email "appveyor@test.com"
  - set OPENBLAS_CORETYPE=Nehalem
  - C:\projects\julia\bin\%JULIAEXE% -e "versioninfo()"
  - C:\projects\julia\bin\%JULIAEXE% -e "@time svd(rand(1000,1000))"
  - set OPENBLAS_CORETYPE=Haswell
  - C:\projects\julia\bin\%JULIAEXE% -e "versioninfo()"
  - C:\projects\julia\bin\%JULIAEXE% -e "@time svd(rand(1000,1000))"
  - C:\projects\julia\bin\%JULIAEXE% -e "Base.runtests(\"all\", 2)"
  - C:\projects\julia\bin\%JULIAEXE% -e "Base.runtests(\"pkg git\", 2)"
