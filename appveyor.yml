environment:
  matrix:
#  - JULIAVERSION: "julialang/bin/winnt/x86/0.3/julia-0.3-latest-win32.exe"
#  - JULIAVERSION: "julialang/bin/winnt/x64/0.3/julia-0.3-latest-win64.exe"
  - JULIAVERSION: "julianightlies/bin/winnt/x86/0.3/julia-0.3.12-80aa77986e-win32.exe"
    JULIAEXE: "julia"
#  - JULIAVERSION: "julianightlies/bin/winnt/x86/0.4/julia-0.4.0-0ff703b40a-win32.exe"
  - JULIAVERSION: "julianightlies/bin/winnt/x86/0.3/julia-0.3.12-80aa77986e-win32.exe"
    JULIAEXE: "julia-debug"
#  - JULIAVERSION: "julianightlies/bin/winnt/x86/julia-latest-win32.exe"
#  - JULIAVERSION: "julianightlies/bin/winnt/x64/julia-latest-win64.exe"

branches:
  only:
    - master
    - /release-.*/
    - tk/avtest

notifications:
  - provider: Email
    on_build_success: false
    on_build_failure: false
    on_build_status_changed: false

install:
# if there's a newer build queued for the same PR, cancel this one
  - ps: if ($env:APPVEYOR_PULL_REQUEST_NUMBER -and $env:APPVEYOR_BUILD_NUMBER -ne ((Invoke-RestMethod `
        https://ci.appveyor.com/api/projects/$env:APPVEYOR_ACCOUNT_NAME/$env:APPVEYOR_PROJECT_SLUG/history?recordsNumber=50).builds | `
        Where-Object pullRequestId -eq $env:APPVEYOR_PULL_REQUEST_NUMBER)[0].buildNumber) { `
        throw "There are newer queued builds for this pull request, failing early." }
# Download most recent Julia Windows binary
  - ps: (new-object net.webclient).DownloadFile(
        $("http://s3.amazonaws.com/"+$env:JULIAVERSION),
        "C:\projects\julia-binary.exe")
# Run installer silently, output to C:\projects\julia
  - C:\projects\julia-binary.exe /S /D=C:\projects\julia

build_script:
# Need to convert from shallow to complete for Pkg.clone to work
#  - IF EXIST .git\shallow (git fetch --unshallow)
#  - C:\projects\julia\bin\julia -e "versioninfo();
#      Pkg.clone(pwd(), \"CoinOptServices\"); Pkg.build(\"CoinOptServices\")"
#test_script:
  - git config --global user.name "appveyor test"
  - git config --global user.email "appveyor@test.com"
  - C:\projects\julia\bin\%JULIAEXE% -e "Base.runtests()"
  - C:\projects\julia\bin\%JULIAEXE% -e "Base.runtests(\"pkg git\")"
#  - C:\projects\julia\bin\julia-debug -e "Base.runtests()"
