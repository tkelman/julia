#environment:
#  matrix:
#  - ARCH: "i686"
#  - ARCH: "x86_64"

#init:
# Carriage returns are bad
#  - git config --global core.autocrlf input

#install:
# libuv's Windows build system uses gyp which needs Python
#  - cinst python -Version 2.7.6
#  - set PYTHON=C:\Python27\python
# Install Cygwin and build-time dependencies
# Using MSYS would save some setup time, but doesn't work
# for 64 bit with binary dependencies yet.
#  - "cinst cyg-get > cyg-get.log"
#  - set PATH=%PATH%;C:\cygwin
#  - "cyg-get make >> cyg-get.log"
#  - "cyg-get curl >> cyg-get.log"
#  - "cyg-get mingw64-%ARCH%-gcc-g++ >> cyg-get.log"

build_script:
  - '"%VS120COMNTOOLS%\..\..\VC\bin\vcvars32.bat"'
  - git submodule update --init
  - ps: (Get-Content deps\libuv\Windows.inc) | ForEach-Object { $_ -replace "icl /nologo /Qstd=c99", "cl /nologo" } | Set-Content deps\libuv\Windows.inc
  - ps: (Get-Content deps\libuv\Windows.inc) | ForEach-Object { $_ -replace "xili", "li" } | Set-Content deps\libuv\Windows.inc
  - cd deps\libuv && nmake /f Windows.mk
  - cd ..\..\src && nmake /f Windows.mk
#  - C:\cygwin\bin\sh --login /cygdrive/c/projects/julia/contrib/windows/msys_build.sh
# Since the AppVeyor VMs have Git installed, they have MSYS1
#  - sh --login /c/projects/julia/contrib/windows/msys_build.sh

#test_script:
#  - cd test && ..\usr\bin\julia-basic runtests.jl all
